<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Natural Language Processing | Stefan Nguyen]]></title>
  <link href="http://stnguyen.com/blog/categories/natural-language-processing/atom.xml" rel="self"/>
  <link href="http://stnguyen.com/"/>
  <updated>2012-01-19T11:49:42+07:00</updated>
  <id>http://stnguyen.com/</id>
  <author>
    <name><![CDATA[Stefan Nguyen]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Install Moses on Ubuntu 10.10]]></title>
    <link href="http://stnguyen.com/blog/2012/01/19/install-moses-on-ubuntu-10-dot-10/"/>
    <updated>2012-01-19T11:24:00+07:00</updated>
    <id>http://stnguyen.com/blog/2012/01/19/install-moses-on-ubuntu-10-dot-10</id>
    <content type="html"><![CDATA[<p>Several months ago I had a chance to work on a Machine-translation project in which we use <a href="http://www.statmt.org/moses/">Moses</a> for Statistical machine translation (SMT).</p>

<p>I had a hard time try to figure out how to make Moses run properly on my system (Ubuntu 10.10), since I was new to Linux OS at that time. This is a note I wrote for myself of how I did successfully install Moses on my machine.</p>

<p>Hope it will help someone ;)</p>

<!-- more -->


<h2>Prepare folders</h2>

<p>I'll install moses into my home directory</p>

<pre><code>$ mkdir ~/moses
$ mkdir ~/moses/downloads
$ mkdir ~/moses/bin
</code></pre>

<h2>Downloading</h2>

<p>Download giza, irstlm, moses and additional scripts into downloads directory:</p>

<pre><code>$ wget http://giza-pp.googlecode.com/files/giza-pp-v1.0.3.tar.gz
$ svn co https://irstlm.svn.sourceforge.net/svnroot/irstlm irstlm_svn
$ svn co https://mosesdecoder.svn.sourceforge.net/svnroot/mosesdecoder/trunk moses_svn
$ wget http://homepages.inf.ed.ac.uk/jschroe1/how-to/scripts.tgz
</code></pre>

<h2>Installing</h2>

<h3>giza++ and mkcls</h3>

<pre><code>$ tar zxf giza-pp-v1.0.3.tar.gz
$ cd giza-pp
$ make
</code></pre>

<p>Giza don't have <code>make install</code>, so let's copy compiled files manually</p>

<pre><code>$ cp GIZA++-v2/GIZA++ ~/moses/bin/
$ cp mkcls-v2/mkcls ~/moses/bin/
$ cp GIZA++-v2/snt2cooc.out ~/moses/bin/
$ cp GIZA++-v2/snt2plain.out ~/moses/bin/
</code></pre>

<h3>irstlm</h3>

<pre><code>$ cd ../irstlm_svn
$ ./check_version.sh
$ ./regenerate-makefiles.sh
$ ./configure --prefix=/home/[your_user_name]/moses/bin/irstlm
$ make
$ make install
</code></pre>

<h3>moses</h3>

<pre><code>$ cd ../moses_svn
$ ./regenerate-makefiles.sh
</code></pre>

<p>If you encounter some error like this:</p>

<pre><code>Calling /usr/bin/aclocal...
Calling /usr/bin/autoconf...
Calling /usr/bin/automake...
OnDiskPt/src/Makefile.am:1: library used but `RANLIB' is undefined
OnDiskPt/src/Makefile.am:1:   The usual way to define `RANLIB' is to add `AC_PROG_RANLIB'
OnDiskPt/src/Makefile.am:1:   to `configure.in' and run `autoconf' again.
kenlm/Makefile.am:1: Libtool library used but `LIBTOOL' is undefined
kenlm/Makefile.am:1:   The usual way to define `LIBTOOL' is to add `AC_PROG_LIBTOOL'
kenlm/Makefile.am:1:   to `configure.in' and run `aclocal' and `autoconf' again.
kenlm/Makefile.am:1:   If `AC_PROG_LIBTOOL' is in `configure.in', make sure
kenlm/Makefile.am:1:   its definition is in aclocal's search path.
moses-chart/src/Makefile.am:1: library used but `RANLIB' is undefined
moses-chart/src/Makefile.am:1:   The usual way to define `RANLIB' is to add `AC_PROG_RANLIB'
moses-chart/src/Makefile.am:1:   to `configure.in' and run `autoconf' again.
moses/src/Makefile.am:1: Libtool library used but `LIBTOOL' is undefined
moses/src/Makefile.am:1:   The usual way to define `LIBTOOL' is to add `AC_PROG_LIBTOOL'
moses/src/Makefile.am:1:   to `configure.in' and run `aclocal' and `autoconf' again.
moses/src/Makefile.am:1:   If `AC_PROG_LIBTOOL' is in `configure.in', make sure
moses/src/Makefile.am:1:   its definition is in aclocal's search path.
automake failed
</code></pre>

<p>Try to install libtool: <code>sudo apt-getinstall libtool</code> then re-run regenerate-makefiles.sh</p>

<pre><code>$ ./configure --with-irstlm=/home/[your_user_name]/moses/bin/irstlm
$ make
</code></pre>

<h3>Mosese support scripts</h3>

<pre><code>$ cd scripts
</code></pre>

<p>Edit Makefile to supply new values for TARGETDIR and BINDIR</p>

<pre><code>TARGETDIR=/home/stefan/moses/bin/moses_scripts
BINDIR=/home/stefan/moses/bin
</code></pre>

<p>Now run:</p>

<pre><code>$ make release
</code></pre>

<p>And you're done.</p>

<h3>More resources</h3>

<ul>
<li>To learn how to train models, have a look at <a href="http://www.statmt.org/moses/?n=FactoredTraining.HomePage">http://www.statmt.org/moses/?n=FactoredTraining.HomePage</a></li>
<li>To try out Moses with a sample trained model, follow <a href="http://www.statmt.org/moses/?n=Moses.Tutorial">http://www.statmt.org/moses/?n=Moses.Tutorial</a></li>
<li>Thereâ€™re also a baseline guiding you from preparing data, training models to tuning, testing and evaluating models: <a href="http://www.statmt.org/wmt11/baseline.html">http://www.statmt.org/wmt11/baseline.html</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
